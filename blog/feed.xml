<!doctype html> 
<html>
  <head>
    <meta charset="utf-8" />
    <meta content="IE=edge;chrome=1" http-equiv="X-UA-Compatible" />
    <title>shirayuca.github.io</title>
    <meta content="Blog description" name="description" />
    <link rel="alternate" type="application/atom+xml" title="Atom Feed" href="/blog/feed.xml" /><!--[if lt IE 9]><script src="../js/ie8.js" type="text/javascript"></script><![endif]--><link href="../css/all.css" media="screen" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button class="navbar-toggle" data-target=".navbar-ex1-collapse" data-toggle="collapse" type="button"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a class="navbar-brand" href="/">shirayuca.github.io</a>
        </div>
        <div class="collapse navbar-collapse navbar-ex1-collapse">
          <ul class="list-unstyled list-inline nav navbar-nav navbar-right">
            <li>
              <a href="https://github.com/shirayuca"><i class="fa fa-github-square fa-lg fa-inverse"></i></a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <div class="container">
      <div class="row">
        <?xml version="1.0" encoding="UTF-8"?>
        <feed xmlns="http://www.w3.org/2005/Atom">
          <title>shirayuca.github.io</title>
          <subtitle>Blog description</subtitle>
          <id>http://shirayuca.github.io/blog</id>
          <link href="http://shirayuca.github.io/blog"/>
          <link href="http://shirayuca.github.io/blog/feed.xml" rel="self"/>
          <updated>2014-09-17T12:58:00Z</updated>
          <author>
            <name>yuka shiratsuchi</name>
          </author>
          <entry>
            <title>鈴木努(2009)『Rで学ぶデータサイエンス8　ネットワーク分析』</title>
            <link rel="alternate" href="http://shirayuca.github.io/blog/2014/09/17/r-network.html"/>
            <id>http://shirayuca.github.io/blog/2014/09/17/r-network.html</id>
            <published>2014-09-17T12:58:00Z</published>
            <updated>2014-09-17T21:58:49+09:00</updated>
            <author>
              <name>Article Author</name>
            </author>
            <content type="html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;p&gt;Rのsnaパッケージ／igraphパッケージを用いて、ネットワーク分析を行う各手法について説明されています。Rで初めてネットワーク分析をする際、大変参考になる書籍です。&lt;/p&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        </content>
          </entry>
          <entry>
            <title>GoogleスプレッドシートでTwitter検索結果のデータ収集</title>
            <link rel="alternate" href="http://shirayuca.github.io/blog/2014/09/07/twitter-data.html"/>
            <id>http://shirayuca.github.io/blog/2014/09/07/twitter-data.html</id>
            <published>2014-09-07T14:12:00Z</published>
            <updated>2014-09-08T23:38:42+09:00</updated>
            <author>
              <name>Article Author</name>
            </author>
            <content type="html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;p&gt;Googleスプレッドシートを使って、任意のキーワードでTwitter検索をした結果のデータを収集します。最初の設定に少しだけ手間がかかりますが、1度設定すれば、あとは勝手にデータを収集し続けてくれるので、お手軽で便利です。作成は基本的に、下記のブログで紹介されているスクリプトをベースとしており、そこから特定セルに検索キーワードを入れるなどの加工を行っています。大変お世話になりました、ありがとうございます。&lt;/p&gt;
        
        &lt;ul&gt;
        &lt;li&gt;&lt;a href="http://blog.hika69.com/blog/2014/01/28/google-apps-script/"&gt;http://blog.hika69.com/blog/2014/01/28/google-apps-script/&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;&lt;img src="http://shirayuca.github.io/blog/2014/09/07/twitter-data/twitter1.png"&gt;&lt;/p&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;h4 id="手順"&gt;手順&lt;/h4&gt;
        
        &lt;ol&gt;
        &lt;li&gt;Twitterアプリの作成&lt;/li&gt;
        &lt;li&gt;GoogleスプレッドシートとTwitterアプリの連携&lt;/li&gt;
        &lt;li&gt;Googleスプレッドシートでスクリプトの編集&lt;/li&gt;
        &lt;/ol&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;h4 id="1.-twitterアプリの作成"&gt;1. Twitterアプリの作成&lt;/h4&gt;
        
        &lt;p&gt;&lt;a href="https://dev.twitter.com/"&gt;Twitter Developers&lt;/a&gt;の&lt;a href="https://apps.twitter.com"&gt;Twitter Application Management&lt;/a&gt;にてアプリケーションを作成し、データ収集に必要なAPIキー等を取得します。私は下記のように入力しました。&lt;/p&gt;
        
        &lt;ul&gt;
        &lt;li&gt;Name: for GoogleAppsScript(任意の名前)&lt;/li&gt;
        &lt;li&gt;Description: GoogleAppsScriptから利用します(任意の説明)&lt;/li&gt;
        &lt;li&gt;Website: &lt;a href="http://shirayuca.github.io/"&gt;http://shirayuca.github.io/&lt;/a&gt; (任意のURL)&lt;/li&gt;
        &lt;li&gt;Callback URL: &lt;a href="https://spreadsheets.google.com/macros"&gt;https://spreadsheets.google.com/macros&lt;/a&gt; (左記と同じように入力)&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;作成すると、&lt;code&gt;API key&lt;/code&gt;と&lt;code&gt;API secret&lt;/code&gt;が発行されます。&lt;/p&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;h4 id="2.-googleスプレッドシートとtwitterアプリの連携"&gt;2. GoogleスプレッドシートとTwitterアプリの連携&lt;/h4&gt;
        
        &lt;p&gt;任意の名前でGoogleスプレッドシートを作成します。その後、メニューバーから&lt;code&gt;ツール &amp;gt; スクリプトエディタ&lt;/code&gt;を選択します。ここでも任意のプロジェクト名をつけてください。&lt;/p&gt;
        
        &lt;p&gt;続いて、スクリプトエディタのメニューバーから&lt;code&gt;リソース &amp;gt; ライブラリ&lt;/code&gt;を選択し、「ライブラリを検索」に&lt;code&gt;MHGYgT-unu1fC7zXOkNfBUVSHJARy_IP7&lt;/code&gt;と入力します。その後、選択ボタンを押して、Twitterのライブラリが表示されたら、バージョンを「1」として保存します。&lt;/p&gt;
        
        &lt;p&gt;&lt;img src="http://shirayuca.github.io/blog/2014/09/07/twitter-data/twitter2.png"&gt;&lt;/p&gt;
        
        &lt;p&gt;その後、スクリプトエディタのメニューバーから&lt;code&gt;ファイル &amp;gt; プロジェクトのプロパティ&lt;/code&gt;を選択し、ユーザープロパティのタブで、Twitterアプリ作成時に発行された&lt;code&gt;API key&lt;/code&gt;と&lt;code&gt;API secret&lt;/code&gt;を下記のように入力します。入力し終えたら、保存します。&lt;/p&gt;
        
        &lt;ul&gt;
        &lt;li&gt;&lt;code&gt;TWITTER_CONSUMER_KEY&lt;/code&gt; に &lt;code&gt;API key&lt;/code&gt;&lt;/li&gt;
        &lt;li&gt;&lt;code&gt;TWITTER_CONSUMER_SECRET&lt;/code&gt; に &lt;code&gt;API secret&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;h4 id="3.-googleスプレッドシートでスクリプトの編集"&gt;3. Googleスプレッドシートでスクリプトの編集&lt;/h4&gt;
        
        &lt;p&gt;コード.gs上に、下記のGistスクリプトをコピーし、保存してください。&lt;/p&gt;
        
        &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://gist.github.com/shirayuca/88c309c168052d35d29d"&gt;https://gist.github.com/shirayuca/88c309c168052d35d29d&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;スプレッドシートに戻り、A1に検索キーワードを入力してください。データは、4行目以降(A4セル以降)に出力されます。そのため、下表のように、3行目のA3セルからF3列に、適宜列名を付与するといいでしょう。&lt;/p&gt;
        
        &lt;table&gt;&lt;thead&gt;
        &lt;tr&gt;
        &lt;th&gt;セル&lt;/th&gt;
        &lt;th&gt;列名&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;&lt;tbody&gt;
        &lt;tr&gt;
        &lt;td&gt;A3&lt;/td&gt;
        &lt;td&gt;ID&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;B3&lt;/td&gt;
        &lt;td&gt;日時&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;C3&lt;/td&gt;
        &lt;td&gt;tweet&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;D3&lt;/td&gt;
        &lt;td&gt;tweetURL&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;E3&lt;/td&gt;
        &lt;td&gt;USER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;F3&lt;/td&gt;
        &lt;td&gt;tweet内URL&lt;/td&gt;
        &lt;/tr&gt;
        &lt;/tbody&gt;&lt;/table&gt;
        
        &lt;p&gt;&lt;img src="http://shirayuca.github.io/blog/2014/09/07/twitter-data/twitter3.png"&gt;&lt;/p&gt;
        
        &lt;p&gt;その後、スクリプトエディタに戻り、メニューバーから&lt;code&gt;実行 &amp;gt; myFunction&lt;/code&gt;で、スクリプトを実行します。初回実行時のみ、色々な承認のアラートが出るので、OKとしてください。&lt;/p&gt;
        
        &lt;p&gt;定期的に検索し、データを蓄積していきたい場合は、スクリプトエディタのメニューバーから&lt;code&gt;リソース &amp;gt; すべてのトリガー&lt;/code&gt;に移動し、「新しいトリガーを追加」して、myFunctionを定期的に実行するタイマーを指定します。下記の画像の例では、30分ごとに検索を行っています。トリガーの初回起動時にも承認アラーとが出るので、OKとしてください。&lt;/p&gt;
        
        &lt;p&gt;&lt;img src="http://shirayuca.github.io/blog/2014/09/07/twitter-data/twitter4.png"&gt;&lt;/p&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        </content>
          </entry>
          <entry>
            <title>安田雪(2010)『「つながり」を突き止めろ　入門！ネットワーク・サイエンス 』</title>
            <link rel="alternate" href="http://shirayuca.github.io/blog/2014/09/07/yasuda.html"/>
            <id>http://shirayuca.github.io/blog/2014/09/07/yasuda.html</id>
            <published>2014-09-07T10:49:00Z</published>
            <updated>2014-09-07T20:37:38+09:00</updated>
            <author>
              <name>Article Author</name>
            </author>
            <content type="html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;p&gt;ネットワーク分析の入門的な書籍です。この書籍のいいところは、実例をふんだんに扱っている点と、多くの先人達に関する逸話(小話？)が盛り込まれている点です。より楽しむためには、ネットワーク分析のはじめの一歩として読むよりも、バラバシ『新ネットワーク思考』や増田・今野『「複雑ネットワーク」とは何か』など、他の入門書や啓蒙書を読んでからの方が、より理解が広がるのではないかと思います。ネットワーク分析のインデックスとしても活用できます。&lt;/p&gt;
        
        &lt;p&gt;書籍の中で紹介されていた実例と関係の深いニュースやページのURLを以下にメモしておきます。&lt;/p&gt;
        
        &lt;ul&gt;
        &lt;li&gt;&lt;a href="http://news.livedoor.com/article/detail/7164747/"&gt;前CIA長官が使った不倫の手口&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="http://www.ifinance.ne.jp/glossary/world/wor018.html"&gt;エンロン事件&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="http://r25.yahoo.co.jp/fushigi/wxr_detail/?id=20130323-00028749-r25"&gt;レス時間で相手の好意度を読む方法&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="http://corp.gree.net/jp/ja/corporate/origin/"&gt;始まりと由来　グリー株式会社(GREE, Inc).&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=88inOjgMxRo"&gt;ソーシャル・ネットワーク(映画)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=o1sjR1TtmA8"&gt;AC AIDS&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="http://oracleofbacon.org/"&gt;The Oracle of Bacon&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;書籍の中で紹介されていたり、関連がある参考文献を以下にメモしておきます。&lt;/p&gt;
        
        &lt;ul&gt;
        &lt;li&gt;&lt;a href="http://www.amazon.co.jp/%E5%8F%8B%E6%83%85%E3%81%AE%E7%A4%BE%E4%BC%9A%E5%AD%A6-SEKAISHISO-SEMINAR-G-%E3%82%A2%E3%83%A9%E3%83%B3/dp/4790704610"&gt;G.アラン『友情の社会学』&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="http://merc.e.u-tokyo.ac.jp/mmrc/dp/pdf/MMRC100_2006.pdf"&gt;勝又・安田(2006)「見えない連鎖 ―カレシの元カノの元カレを知っていますか？― 」&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="http://ci.nii.ac.jp/naid/10022008079"&gt;松尾・安田(2007)「SNSにおける関係形成原理 : mixi のデータ分析」&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        </content>
          </entry>
          <entry>
            <title>watts.strogatz.game でスモールワールド・シミュレーション</title>
            <link rel="alternate" href="http://shirayuca.github.io/blog/2014/09/02/watts-strogatz.html"/>
            <id>http://shirayuca.github.io/blog/2014/09/02/watts-strogatz.html</id>
            <published>2014-09-02T12:14:00Z</published>
            <updated>2014-09-02T23:04:28+09:00</updated>
            <author>
              <name>Article Author</name>
            </author>
            <content type="html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;p&gt;R のパッケージ igraph の watts.strogatz.game() 関数を用いて、スモールワールド・シミュレーションを行います。sna パッケージにて紹介されていたものを、igraph にて行った形となります。 igraph と sna では、レギュラーグラフの作り方に違いがあるので、全く同じ結果にはなりません。&lt;/p&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;h4 id="ネットワーク図の作成"&gt;ネットワーク図の作成&lt;/h4&gt;
        
        &lt;p&gt;ランダム性 p について、0、0.2、1の3種類でネットワーク図を作成します。また、平均経路長、クラスター係数、および最短距離マトリックスと特定頂点の最短経路も出します。&lt;/p&gt;
        
        &lt;script src="https://gist.github.com/shirayuca/4af16341509466a9be13.js"&gt;&lt;/script&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;h4 id="100回繰り返し"&gt;100回繰り返し&lt;/h4&gt;
        
        &lt;p&gt;ランダム性 p について、0から1まで 0.01刻みに100回繰り返し、その結果の平均経路長とクラスター係数をプロットします。&lt;/p&gt;
        
        &lt;script src="https://gist.github.com/shirayuca/0e6e00182086f7149a15.js"&gt;&lt;/script&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;h4 id="クラスター係数と平均経路長の変化"&gt;クラスター係数と平均経路長の変化&lt;/h4&gt;
        
        &lt;p&gt;上記で100回繰り返した結果について、 p = 0 の値で割った、初期値に対する比の変化として片対数グラフを作成します。&lt;/p&gt;
        
        &lt;script src="https://gist.github.com/shirayuca/5ea82d0a31dd7b35650a.js"&gt;&lt;/script&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;h4 id="参考文献"&gt;参考文献&lt;/h4&gt;
        
        &lt;ul&gt;
        &lt;li&gt;&lt;a href="http://www.inside-r.org/packages/cran/igraph/docs/watts.strogatz.game"&gt;http://www.inside-r.org/packages/cran/igraph/docs/watts.strogatz.game&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="http://www.amazon.co.jp/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E5%88%86%E6%9E%90-R%E3%81%A7%E5%AD%A6%E3%81%B6%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9-8-%E9%88%B4%E6%9C%A8-%E5%8A%AA/dp/4320019288"&gt;http://www.amazon.co.jp/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E5%88%86%E6%9E%90-R%E3%81%A7%E5%AD%A6%E3%81%B6%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9-8-%E9%88%B4%E6%9C%A8-%E5%8A%AA/dp/4320019288&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;&lt;br /&gt;
        &lt;br /&gt;&lt;/p&gt;
        </content>
          </entry>
          <entry>
            <title>ターミナルでコマンドの省略</title>
            <link rel="alternate" href="http://shirayuca.github.io/blog/2014/09/02/alias.html"/>
            <id>http://shirayuca.github.io/blog/2014/09/02/alias.html</id>
            <published>2014-09-02T01:47:00Z</published>
            <updated>2014-09-02T11:03:18+09:00</updated>
            <author>
              <name>Article Author</name>
            </author>
            <content type="html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;p&gt;ブログのエントリを作成する際、いつもターミナルを立ち上げ、 &lt;/p&gt;
        
        &lt;pre&gt;&lt;code&gt;cd /Users/yuca/dev/...
        &lt;/code&gt;&lt;/pre&gt;
        
        &lt;p&gt;と打ち込んでいたのですが、大変面倒なので、省略するコマンドを作りました。&lt;/p&gt;
        
        &lt;p&gt;&lt;br&gt;&lt;/p&gt;
        
        &lt;h4 id="コマンド作成の流れ"&gt;コマンド作成の流れ&lt;/h4&gt;
        
        &lt;p&gt;.bashrc ファイルを開く。&lt;/p&gt;
        
        &lt;pre&gt;&lt;code&gt;$ emacs ~/.bashrc
        &lt;/code&gt;&lt;/pre&gt;
        
        &lt;p&gt;.bashrc ファイル内に、&lt;code&gt;alias エイリアス名=’コマンド’&lt;/code&gt; を記述。&lt;/p&gt;
        
        &lt;pre&gt;&lt;code&gt;alias blog=’cd /Users/yuca/dev/shirayuca.github.io/source/blog/posts’
        &lt;/code&gt;&lt;/pre&gt;
        
        &lt;p&gt;.bash_profile ファイルを開く。&lt;/p&gt;
        
        &lt;pre&gt;&lt;code&gt;$ emacs ~/.bash_profile
        &lt;/code&gt;&lt;/pre&gt;
        
        &lt;p&gt;.bash_profile ファイル内に、&lt;code&gt;source .bashrc&lt;/code&gt; の1行を追加。&lt;/p&gt;
        
        &lt;p&gt;下記のコマンドで変更を反映する。&lt;/p&gt;
        
        &lt;pre&gt;&lt;code&gt;$ source ~/.bash_profile
        &lt;/code&gt;&lt;/pre&gt;
        
        &lt;p&gt;これで、ターミナル上で &lt;code&gt;blog&lt;/code&gt; と打てば、すぐにブログの .md ファイルがあるディレクトリに移動できます。&lt;/p&gt;
        
        &lt;p&gt;&lt;br&gt;&lt;/p&gt;
        
        &lt;h4 id="参考url"&gt;参考URL&lt;/h4&gt;
        
        &lt;ul&gt;
        &lt;li&gt;&lt;a href="http://laugh-raku.com/archives/2905"&gt;http://laugh-raku.com/archives/2905&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="http://www.atmarkit.co.jp/ait/articles/0203/12/news001_2.html"&gt;http://www.atmarkit.co.jp/ait/articles/0203/12/news001_2.html&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;&lt;br /&gt;
        &lt;br /&gt;&lt;/p&gt;
        </content>
          </entry>
          <entry>
            <title>木・格子・ランダムグラフの描画と平均経路長算出</title>
            <link rel="alternate" href="http://shirayuca.github.io/blog/2014/08/31/3graphs.html"/>
            <id>http://shirayuca.github.io/blog/2014/08/31/3graphs.html</id>
            <published>2014-08-30T17:00:00Z</published>
            <updated>2014-09-02T11:03:34+09:00</updated>
            <author>
              <name>Article Author</name>
            </author>
            <content type="html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;p&gt;R で木グラフ、格子グラフ、ランダムグラフの描画と平均経路長を算出するためのコードです。&lt;/p&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;script src="https://gist.github.com/shirayuca/a0ee3d51657f9e5124b5.js"&gt;&lt;/script&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;script src="https://gist.github.com/shirayuca/7b1e86c8b26ed0f5d63e.js"&gt;&lt;/script&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;script src="https://gist.github.com/shirayuca/bbf0b769a1621fa13825.js"&gt;&lt;/script&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
        </content>
          </entry>
        </feed>
        
      </div>
    </div>
    <script src="../js/all.js" type="text/javascript"></script>
  </body>
</html>